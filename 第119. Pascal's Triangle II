Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?
注意给的是index，是从0开始的
这是别人的代码，是对的，验算过。很巧妙
重点是只有o(k)的空间
代码:
public class Solution {
    public List<Integer> getRow(int rowIndex) {
        Integer[] content = new Integer[rowIndex+1];
        Arrays.fill(content,0);
        content[0] = 1;
        for(int i = 1; i <= rowIndex; i++){
            for(int j = i; j >= 1; j--){
                content[j] += content[j-1];
            }
        }
        return Arrays.asList(content);
        
    }
}

