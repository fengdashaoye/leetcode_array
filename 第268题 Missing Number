Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

For example,
Given nums = [0, 1, 3] return 2.
思路:一开始将其排序，然后判断，需要注意的是边界问题。
如果[0]，则需要return 1。注意长度小于1时的情况。
代码:
public class Solution {
    public int missingNumber(int[] nums) {
        if(nums.length <= 1){
            int result = 0;
            result = panduan(nums);
            return result;
        }
        Arrays.sort(nums);
        for(int i = 1; i < nums.length; i++){
            if(nums[i] - nums[i-1] != 1){
                return nums[i-1] + 1;
            }
        }
        if(nums[0] > 0){
            return 0;
        }
        return nums[nums.length-1]+1;
        
    }
    public int panduan(int[] nums){
        if(nums.length == 0){
            return 0;
        }
        if(nums[0] == 0){
            return 1;
        }
        return 0;
    }
    
}

更为厉害的一种解法:异或用符号(^)表示，其运算规则是：两个操作数的位中，相同则结果为0，不同则结果为1
public class Solution {
    public int missingNumber(int[] nums) {
      int xor = 0, i = 0;
	    for (i = 0; i < nums.length; i++) {
		    xor = xor ^ i ^ nums[i];
	    }
	    return xor ^ i;      
    }   
}





